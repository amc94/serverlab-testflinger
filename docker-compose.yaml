# 2.4 for networks -> gateway, init

version: "2.4"

services:
  db:
    # use docker redis image
    image: redis
    init: true

    networks:
      docker_int:
        ipv4_address: 10.172.10.14
    expose:
      - "6379"
    hostname: testflinger-db

    volumes:
      - db_data:/var/lib/redis

    environment:
      - REDIS_REPLICATION_MODE=master

    command: [
      "redis-server",
      "--bind 0.0.0.0",
      "--maxmemory 4096mb",
      "--maxmemory-policy allkeys-lfu"
    ]

  api:
    depends_on:
      - db
    # build image w/ deps
    build:
      context: .
      dockerfile: testflinger-api
    stdin_open: true
    tty: true
    privileged: true
    init: true

    networks:
      docker_int:
        ipv4_address: 10.172.10.13
    ports:
      - "10.1.11.159:8000:8000"
    hostname: testflinger-api

    volumes:
      - tf_data:/data

    environment:
      - TESTFLINGER_CONFIG=/data/testflinger/testflinger.conf

    command: "gunicorn --bind 0.0.0.0:8000 testflinger:app" 

  agent:
    depends_on:
      - api
    # build image w/ deps
    build: 
      context: .
      dockerfile: testflinger-agent
    stdin_open: true
    tty: true
    privileged: true
    init: true

    networks:
      needham_ext:
        ipv4_address: 10.245.128.10
      docker_int:
        ipv4_address: 10.172.10.10
    hostname: testflinger-agent

    volumes:
      - tf_data:/data

    command: "/sbin/my_init -- bash -l"

  snappy:
    depends_on:
      - agent
    # build image w/ deps
    build: 
      context: .
      dockerfile: testflinger-snappy
    stdin_open: true
    tty: true
    privileged: true
    init: true

    networks:
      docker_int:
        ipv4_address: 10.172.10.12
    hostname: testflinger-snappy
    init: true

    volumes:
      - tf_data:/data

  cli:
    depends_on:
      - snappy
    # build image w/ deps
    build: 
      context: .
      dockerfile: testflinger-cli
    stdin_open: true
    tty: true
    privileged: true
    init: true

    networks:
      needham_ext:
        ipv4_address: 10.245.128.11
      docker_int:
        ipv4_address: 10.172.10.11
    hostname: testflinger-cli

    volumes:
      - tf_data:/data

    command: "/sbin/my_init -- bash -l"

  # logstash:
  #     depends_on:
  #       - snappy
  #     labels:
  #       com.example.service: "logstash"
  #       com.example.description: "For logging data"
  #     image: logstash

  #     networks:
  #       docker_int:
  #         ipv4_address: 10.172.10.15
  #     expose:
  #       - "5959"
  #     hostname: testflinger-log

  #     volumes:
  #       - log_data:/var

  #     command: "logstash -f /logstash_dir/logstash.conf"

networks:
  docker_int:
    driver: bridge
    driver_opts:
        parent: docker0
    ipam:
      config:
        - subnet: "10.172.10.1/24"
          gateway: 10.172.10.1

  needham_ext:
    driver: macvlan
    driver_opts:
        parent: eno2
    ipam:
      config:
        - subnet: "10.245.128.0/22"
          gateway: 10.245.128.1

volumes:
  db_data: {}
  tf_data: {}
  # log_data: {}
