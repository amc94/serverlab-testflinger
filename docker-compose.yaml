version: "3.9"

services:
  db:
    image: redis:latest
    restart: unless-stopped
    container_name: tf-db

    networks:
      needham_int:
        ipv4_address: 10.245.128.13
      docker_int:
        ipv4_address: 10.172.10.13
    expose:
      - 6379
    hostname: tf-db

    volumes:
      - db_data:/var/lib/redis
      - db_log:/var/log/redis

    environment:
      - REDIS_REPLICATION_MODE=master

    command: [
      "redis-server",
      "--bind 0.0.0.0",
      "--maxmemory 16384mb",
      "--maxmemory-policy allkeys-lfu"
    ]

  mqtt:
    depends_on:
      - db
    build:
      context: .
      dockerfile: tf-mqtt
    restart: unless-stopped
    container_name: tf-mqtt

    networks:
      needham_int:
        ipv4_address: 10.245.128.14
      docker_int:
        ipv4_address: 10.172.10.14
    expose:
      - 1883
      - 9001
    hostname: tf-mqtt

    # volumes:
    #   - ./mqtt/conf:/mosquitto/config

  api:
    depends_on:
      - mqtt
    build:
      context: .
      dockerfile: tf-api
    restart: unless-stopped
    container_name: tf-api

    sysctls:
      net.core.somaxconn: 2048

    networks:
      needham_int:
        ipv4_address: 10.245.128.10
      docker_int:
        ipv4_address: 10.172.10.10
    expose:
      - 8000
    hostname: tf-api

    volumes:
      - api_data:/data/testflinger

    environment:
      - PATH=/data/testflinger:$PATH

    command: [
      "gunicorn",
      "-b=0.0.0.0",
      "-t=0",
      "-k=gevent",
      "--worker-connections=1000",
      "testflinger:app"
    ]

  agent:
    depends_on:
      - api
    build:
      context: .
      dockerfile: tf-agent
    stdin_open: true
    tty: true
    privileged: true
    restart: unless-stopped
    container_name: tf-agent

    networks:
      needham_int:
        ipv4_address: 10.245.128.11
      docker_int:
        ipv4_address: 10.172.10.11
    expose:
      - 19999
    hostname: tf-agent

    volumes:
      # for agents (docker in docker)
      - /var/run/docker.sock:/var/run/docker.sock
      - agent_data:/data/testflinger-agent
      - snappy_data:/data/snappy-device-agents
      - docker_data:/data/docker
      - ./log:/var/log/sut-agent
      # - ./sut:/data/testflinger-agent/sut
      # - ./sut/agent:/data/testflinger-agent/sut/agent
      # - ./sut/cli:/data/testflinger-agent/sut/cli
      # - ./sut/snappy:/data/testflinger-agent/sut/snappy
      # netdata volumes
      # - netdata_cache:/var/cache/netdata
      # - netdata_config:/etc/netdata
      # - netdata_lib:/var/lib/netdata
      # - /proc:/host/proc:ro
      # - /sys:/host/sys:ro
      # - /etc/os-release:/host/etc/os-release:ro

    # environment:
    #   - PATH=/data/testflinger-agent:/data/snappy-device-agents:$PATH

    command: ["/opt/tf-entrypoint.sh"]

    # # for netdata
    #   cap_add:
    #     - SYS_PTRACE
    #   security_opt:
    #     - apparmor:unconfined

  cli:
    depends_on:
      - agent
    build:
      context: .
      dockerfile: tf-cli
    stdin_open: true
    tty: true
    restart: unless-stopped
    container_name: tf-cli

    networks:
      needham_int:
        ipv4_address: 10.245.128.12
      docker_int:
        ipv4_address: 10.172.10.12
    hostname: tf-cli

    volumes:
      - cli_data:/data/testflinger-cli

    environment:
      - PATH=/data/testflinger-cli:$PATH

  portainer:
    depends_on:
      - cli
    image: portainer/portainer-ce:2.9.3
    restart: unless-stopped
    container_name: nh-portainer

    networks:
      needham_int:
        ipv4_address: 10.245.128.15
      docker_int:
        ipv4_address: 10.172.10.15
    expose:
      - 9443
    hostname: nh-portainer

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  jenkins:
    depends_on:
      - cli
    image: jenkins/jenkins:lts
    restart: unless-stopped
    container_name: nh-jenkins

    networks:
      needham_int:
        ipv4_address: 10.245.128.16
      docker_int:
        ipv4_address: 10.172.10.16
    expose:
      - 8080
      - 50000
    hostname: nh-jenkins

    volumes:
      - jenkins_data:/var/jenkins_home
      - ./jenkins/backups:/data/backups
      - ./jenkins/pipelines:/opt/pipelines

  restarter:
    depends_on:
      - api
    image: docker
    restart: unless-stopped
    container_name: tf-restarter

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    # periodic execution (UTC 06:00)
    command: [
      "/bin/sh",
      "-c",
      "while true; \
      do if [ `date +'%H'` -eq 6 ];
          then echo 'restarting tf-api @' `date`;
          docker restart tf-api;
          echo;
          sleep 3600;
      fi; \
      done"]

  influxdb:
    depends_on:
      - agent
    image: influxdb:latest
    restart: unless-stopped
    container_name: nh-influxdb

    networks:
      needham_int:
        ipv4_address: 10.245.128.17
      docker_int:
        ipv4_address: 10.172.10.17
    expose:
      - 8086
    hostname: nh-influxdb

    volumes:
      - influx_data:/var/lib/influxdb

  chronograf:
    depends_on:
      - influxdb
    image: chronograf:latest
    restart: unless-stopped
    container_name: nh-chronograf

    networks:
      needham_int:
        ipv4_address: 10.245.128.18
        docker_int:
          ipv4_address: 10.172.10.18
    expose:
      - 8888

    volumes:
      - chronograf_data:/var/lib/chronograf
    environment:
      - INFLUXDB_URL=http://influxdb:8086

  influxdb_relay:
    depends_on:
      - influxdb
    image: bitnami/influxdb-relay:latest
    restart: unless-stopped
    container_name: nh-inflx-relay

    networks:
      needham_int:
        ipv4_address: 10.245.128.19
      docker_int:
        ipv4_address: 10.172.10.19
    expose:
      - 9096
    hostname: nh-inflx-relay

  grafana:
    depends_on:
      - influxdb
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: nh-grafana

    networks:
      needham_int:
        ipv4_address: 10.245.128.20
        docker_int:
          ipv4_address: 10.172.10.20
    expose:
      - 3000
    hostname: nh-grafana

  vault:
    depends_on:
      - agent
    image: vault:latest
    restart: unless-stopped
    container_name: nh-vault

    networks:
      needham_int:
        ipv4_address: 10.245.128.21
        docker_int:
          ipv4_address: 10.172.10.21
    expose:
      - 8200
    hostname: nh-vault

    environment:
      VAULT_DEV_ROOT_TOKEN_ID: nh-vault-root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"

    volumes:
      - vault_data:/vault/data
      - vault_config:/vault/config

    cap_add:
      - IPC_LOCK

networks:
  docker_int:
    driver: macvlan
    driver_opts:
        parent: docker0
    ipam:
      config:
        - subnet: "10.172.10.1/24"

  needham_int:
    driver: macvlan
    driver_opts:
        parent: eno2
    ipam:
      config:
        - subnet: "10.245.128.0/22"
        # - gatway: "10.245.128.9"

volumes:
  db_data: {}
  db_log: {}
  api_data: {}
  agent_data: {}
  snappy_data: {}
  docker_data: {}
  agent_log: {}
  cli_data: {}
  portainer_data: {}
  jenkins_data: {}
  influx_data: {}
  chronograf_data: {}
  grafana_data: {}
  vault_data: {}
  vault_config: {}
  # netdata_cache: {}
  # netdata_config: {}
  # netdata_lib: {}
