FROM phusion/baseimage:focal-1.0.0

ENV DEBIAN_FRONTEND noninteractive
ENV HOME /root
ENV LC_ALL C.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

ENV PATH /data/testflinger-agent:/data/snappy-device-agents:$PATH

# add maas-cli PPA
RUN apt-add-repository ppa:maas/2.9 -y

# install deps & cleanup
RUN apt-get update \
  && apt-get install -y \
    --no-install-recommends \
    bash \
    bash-completion \
    sudo \
    openssh-client \
    build-essential \
    net-tools \
    iputils-ping \
    iproute2 \
    curl \
    git \
    wget \
    python3 \
    python3-dev \
    python3-pip \
    python3-virtualenv \
    python3-requests \
    python3-click \
    maas-cli

# clean up APT
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# link python3 bin
RUN ln -s /usr/bin/python3 /usr/bin/python

# add ubuntu and testflinger users
RUN useradd -ms /bin/bash ubuntu \
  && useradd -ms /bin/bash testflinger

# add to sudoers
RUN echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# add SSH access
RUN rm -f /etc/service/sshd/down \
  && /etc/my_init.d/00_regen_ssh_host_keys.sh > /dev/null 2>&1

# generate ssh-keys, import auth_keys
COPY ./ssh/authorized_keys /tmp/authorized_keys
USER ubuntu
RUN ssh-keygen -t rsa -N '' -f /home/ubuntu/.ssh/id_rsa \
  && cat /tmp/authorized_keys >> /home/ubuntu/.ssh/authorized_keys

USER testflinger
RUN ssh-keygen -t rsa -N '' -f /home/testflinger/.ssh/id_rsa \
  && cat /tmp/authorized_keys >> /home/testflinger/.ssh/authorized_keys

# root must be last
USER root
RUN ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa \
  && cat /tmp/authorized_keys >> /root/.ssh/authorized_keys \
  && rm -f /tmp/authorized_keys

# facilitate logging
RUN mkdir -p /var/log/testflinger \
  && chmod 755 /var/log/testflinger

# clone tf-agent src in volume dir
WORKDIR /data/testflinger-agent
RUN git init \
  && git remote add origin https://git.launchpad.net/testflinger-agent \
  && git fetch origin \
  && git checkout -b master --track origin/master

# copy tf-agent config files
COPY ./code/testflinger-agent.conf /data/testflinger-agent

# copy tf-agent sut files
RUN mkdir ./sut/
COPY ./sut/agent/* /data/testflinger-agent/sut/

# clone snappy-agent src in volume dir
WORKDIR /data/snappy-device-agents
RUN git init \
  && git remote add origin https://git.launchpad.net/snappy-device-agents \
  && git fetch origin \
  && git checkout -b master --track origin/master

# copy snappy-agent sut files
RUN mkdir ./sut/
COPY ./sut/snappy/* /data/snappy-device-agents/sut/

# run tf-agent setup
# USER ubuntu
WORKDIR /data/testflinger-agent
RUN echo && echo "Running testflinger-agent setup:" \ 
  && python3 setup.py install

#run snappy-agent setup
WORKDIR /data/testflinger-agent
RUN echo && echo "Running snappy-device-agents setup:" \
  && virtualenv -p python3 env \
  && . env/bin/activate \
  && python3 setup.py install \
  && deactivate

# adjust perms on src files
RUN chown -R ubuntu:ubuntu /data/testflinger-agent \
  && chown -R ubuntu:ubuntu /data/snappy-device-agents

# copy entrypoint to container
COPY ./code/tf-entrypoint.sh /opt/tf-entrypoint.sh
RUN chmod 755 /opt/tf-entrypoint.sh

# set user passwords
# secure method
RUN echo && echo && echo && echo && echo && echo "###########################################"
RUN --mount=type=secret,id=ubuntu_secret,required=true,dst=/run/secrets/ubuntu cat /run/secrets/ubuntu
RUN echo "ubuntu:  " && cat /run/secrets/ubuntu
RUN --mount=type=secret,id=testflinger_secret,required=true,dst=/run/secrets/testflinger cat /run/secrets/testflinger
RUN echo "testflinger:  " && cat /run/secrets/testflinger
# RUN --mount=type=secret,id=ubuntu,required=true,target=/run/secrets/ubuntu cat /run/secrets/ubuntu | chpasswd 2>&1
# RUN --mount=type=secret,id=testflinger,required=true,target=/run/secrets/testflinger cat /run/secrets/testflinger | chpasswd 2>&1
RUN echo "###########################################" && echo && echo && echo && echo && echo

# insecure method
# RUN echo "ubuntu:<password>" | chpasswd \
  # && echo "testflinger:<password>" | chpasswd